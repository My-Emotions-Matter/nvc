import &ArtSuite

createDataNodesR = (map, intoObject, parentKey, rootKey, depth) ->

  if !rootKey && parentKey != :core
    rootKey = parentKey


  array v, key from map when key != :description
    throw new Error "key #{key} already exists" if intoObject[key]

    intoObject[key] = merge
      if isPlainObject v
        childKeys: createDataNodesR v, intoObject, key, rootKey, depth + 1

      description:
        if isString description = v?.description ? v
          description

      {} key, parentKey, rootKey, depth
    key

createDataNodes: (map) ->
  out = {}
  createDataNodesR map, out, null, null, -1
  out

stripDescriptions: stripDescriptions = (map) ->
  if isPlainObject map
    object v, key from map when key != :description
      stripDescriptions v
  else map