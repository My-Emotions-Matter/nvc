import &StandardImport, &Data

class App extends FluxComponent
  @subscriptions
    :navState.keyPath
    :navState.currentTab
    :navState.selectedKey
    :navState.searchResults

  render: ->
    showSetStatus = dataNodes[@selectedKey]?.description

    log {@currentTab, @keyPath}

    CanvasElement
      canvasId:       :artCanvas
      childrenLayout: :column
      on: ready: ({target}) =>
        @models.viewState.deviceSize = target.currentSize

      Element
        draw: #f9f9f9

        Element
          key: "status"
          size: ww:1, hh: 1, h: -110
          if showSetStatus
            &SetStatusWidget key: @selectedKey
          else if @keyPath[0] == :needs
            &NeedsDashboard()

        Element
          size: ww:1, hch:1
          axis: :bottomLeft
          location: yh: 1
          childrenLayout: :column

          draw: :white

          switch @currentTab
          when :search
            []
              &ShowMenu keys: @searchResults
              &SearchBar()
          when :affirmations
            &Affirmations()
          else
            []
              &ShowPath()                 if @keyPath.length > 0
              &ShowMenu key: @selectedKey if !showSetStatus && @selectedKey

          Element
            size: ww:1, h: 70
            padding: 5
            childrenLayout: :row
            childrenAlignment: :centerCenter
            array key in :needs :emotions
              &TabButton
                style: :tab
                subtext: key
                emoji: EmojiMap[key]
                action: -> @models.navState.selectKey key
                size: ps: 1

            &TabButton
              style: :tab
              subtext: "affirmations"
              emoji: :üëç
              action: @models.navState.showAffirmations
              size: ps: 1

            &TabButton
              style: :tab
              subtext: :about
              emoji: EmojiMap.about
              action: -> @models.navState.selectKey :about
              size: ps: 1

            &TabButton
              style: :tab
              subtext: "search"
              emoji: :üîç
              action: @models.navState.toggleSearchVisible
              size: ps: 1
