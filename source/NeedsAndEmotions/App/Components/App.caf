import &StandardImport, &Data, &Pages

{simpleBrowserInfo, getCssSafeAreaInset} = &ArtFoundation.Browser

class App extends FluxComponent
  @subscriptions
    :navState.keyPath
    :navState.currentTab
    :navState.selectedKey
    :navState.searchResults
    :viewState.safePadding

  render: ->
    showSetStatus =
      dataNodes[@selectedKey]?.description
      && !(dataNodes[@selectedKey].childKeys?.length > 0)
    @ extract safePadding

    CanvasElement
      canvasId:       :artCanvas
      on: ready: (event) =>
        @models.viewState.deviceSize = event.target.currentSize

      Element
        draw: #f9
        padding: {top} = safePadding

        Element
          key: :status
          size: ww:1, hh: 1, h: -120 - safePadding.bottom
          padding: {left, right} = safePadding
          switch @currentTab
          when :home     then HomePage()
          when :history  then History()
          when :needs    then NeedsEmotionPage needEmotion: @selectedKey
          when :emotions then NeedsEmotionPage needEmotion: @selectedKey, emotions: true

          # else
          #   if showSetStatus
          #     NeedsEmotionPage needEmotion: @selectedKey
          #   else if @keyPath[0] == :needs
          #     &NeedsDashboard()

        Element
          draw: :white
          padding: {bottom, left, right} = safePadding
          :parentWidthChildrenHeight
          :bottomLeft
          Element
            :topCenter :column
            size:
              hch: 1
              w: ({x}) -> min x, 820

            switch @currentTab
            when :search
              []
                &ShowMenu keys: @searchResults
                &SearchBar()
            when :affirmations
              &Affirmations()
            when :home :history
              null
            else
              []
                &ShowPath()                 if @keyPath.length > 0
                &ShowMenu key: @selectedKey if !showSetStatus && @selectedKey

            &TabBar()
