import &StandardImport, &Data

{simpleBrowserInfo, getCssSafeAreaInset} = &ArtFoundation.Browser

class App extends FluxComponent
  @subscriptions
    :navState.keyPath
    :navState.currentTab
    :navState.selectedKey
    :navState.searchResults
    :viewState.safePadding

  render: ->
    showSetStatus = dataNodes[@selectedKey]?.description
    @ extract safePadding

    CanvasElement
      canvasId:       :artCanvas
      childrenLayout: :column
      on: ready: (event) =>
        @models.viewState.deviceSize = event.target.currentSize

      Element
        draw: #f9
        padding: {top} = safePadding

        Element
          key: :status
          size: ww:1, hh: 1, h: -120 - safePadding.bottom
          padding: {left, right} = safePadding
          switch
          when @currentTab == :home
            &HomePage()
          else if showSetStatus
            &NeedsEmotionPage needEmotion: @selectedKey
          else if @keyPath[0] == :needs
            &NeedsDashboard()

        Element
          draw: :white
          padding: {bottom, left, right} = safePadding
          :parentWidthChildrenHeight
          :bottomLeft :column

          switch @currentTab
          when :search
            []
              &ShowMenu keys: @searchResults
              &SearchBar()
          when :affirmations
            &Affirmations()
          when :home
            null
          else
            []
              &ShowPath()                 if @keyPath.length > 0
              &ShowMenu key: @selectedKey if !showSetStatus && @selectedKey

          Element
            size: ww:1, h: 70
            padding: 5
            :row :childrenCenterCenter

            &TabButton
              :parentSize
              style:    :tab
              text:     :home
              emoji:    :üè†
              action:   -> @models.navState.currentTab = :home

            array key in :needs :emotions
              &TabButton
                :parentSize
                style:    :tab
                text:  key
                emoji:    EmojiMap[key]
                action:   -> @models.navState.selectKey key

            &TabButton
              :parentSize
              style:    :tab
              text:  :affirmations
              emoji:    :üëç
              action: @models.navState.showAffirmations
              size: ps: 1
            &TabButton
              :parentSize
              style:    :tab
              text:  :search
              emoji:    :üîç
              action:   @models.navState.toggleSearchVisible

